using System;
using System.Linq;
using OhioBox.Moranbernate.Mapping;

namespace OhioBox.Moranbernate.Tests.Domain
{
	public class CsvPersister : ICustomTypeMapper<int[]>
	{
		private readonly char[] _separator = new[] { ',' };

		public object ToParameter(int[] input)
		{
			return string.Join(",", input);
		}

		public int[] FromDb(object input)
		{
			return input.ToString().Split(_separator, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();
		}
	}

	public class AnnoyingInterfaceMapper : ICustomTypeMapper<IAnnoyingInterface>
	{
		public IAnnoyingInterface FromDb(object input)
		{
			return new AnnoyingInterface();
		}

		public object ToParameter(IAnnoyingInterface input)
		{
			return "Hello";
		}
	}

	public class CustomTypeObject
	{
		public long Id { get; set; }
		public int[] SomeIntArray { get; set; }
		public IAnnoyingInterface AnnoyingInterface { get; set; }
	}

	public interface IAnnoyingInterface
	{
	}

	public class AnnoyingInterface : IAnnoyingInterface
	{
	}

	public class CustomTypeObjectMap : ClassMap<CustomTypeObject>
	{
		public CustomTypeObjectMap()
		{
			Table("table_name");
			Id(x => x.Id).GeneratedBy.AutoGenerated();
			Map(x => x.SomeIntArray).CustomType(new CsvPersister());
			Map(x => x.AnnoyingInterface).CustomType(new AnnoyingInterfaceMapper());
		}
	}

}