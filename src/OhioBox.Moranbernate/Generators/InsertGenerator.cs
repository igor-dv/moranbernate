using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using OhioBox.Moranbernate.Mapping;
using OhioBox.Moranbernate.Utils;

namespace OhioBox.Moranbernate.Generators
{
	internal class InsertGenerator<T> : ISqlCommandGenerator
		where T : class
	{
		private readonly ClassMap<T> _map;

		public InsertGenerator()
		{
			_map = MappingRepo<T>.GetMap();
		}

		public string GetSql()
		{
			var sql = InsertHelper.GetInsertSql(_map, CreateValues);

			if (_map.HasAutoGeneratedId())
				sql += " SELECT LAST_INSERT_ID();";

			return sql;
		}

		private string CreateValues(string[] columns)
		{
			return $"({string.Join(", ", Enumerable.Range(0, columns.Length).Select(i => _map.CreateParameter("p" + i)))})";
		}

		public IEnumerable<Property> GetColumns()
		{
			return InsertHelper.GetColumns(_map);
		}
	}
}